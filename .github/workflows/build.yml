name: Build Plugin Phar

on:
    push

jobs:
    build:
        name: Build Plugin Phar
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
        
        steps:
        - uses: actions/checkout@v3

        - name: Setup PHP
          uses: shivammathur/setup-php@v2
          with:
              php-version: 8.1
              ini-values: phar.readonly=0
              coverage: none

        - name: Get composer cache directory
          id: composer-cache
          run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

        - name: Cache composer dependencies
          uses: actions/cache@v3
          with:
              path: ${{ steps.composer-cache.outputs.dir }}
              # Use composer.json for key, if composer.lock is not committed.
              # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
              key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
              restore-keys: ${{ runner.os }}-composer-

        - name: Download pmmp plugin build script
          run: wget https://raw.githubusercontent.com/ColinHDev/pmmp-plugin-build-script/main/build-plugin.php

        - id: get-manifest
          run: |
              echo "NAME=$(grep '^name:' plugin.yml | cut -d' ' -f2- | xargs)" >> $GITHUB_OUTPUT
              echo "PRERELEASE=$(grep '^version:' plugin.yml | cut -d' ' -f2- | xargs | grep -E 'alpha|beta|pre' && echo 'true')" >> $GITHUB_OUTPUT
              echo "API=$(grep '^api:' plugin.yml | cut -d' ' -f2- | xargs)" >> $GITHUB_OUTPUT
              sed -i '/src-namespace-prefix/d' plugin.yml
              sed -i "s/version: .*/version: ${{ github.ref_name }}/g" plugin.yml

        - name: Build plugin phar
          run: php build-plugin.php

        - name: Upload plugin phar as workflow artifact
          uses: actions/upload-artifact@v3
          with:
              name: release_artifacts
              path: |
                  ${{ github.workspace }}/${{ steps.get-manifest.outputs.NAME }}.phar
    
        - name: Rename plugin phar for the development release
          run: mv "${{ github.workspace }}/${{ steps.get-manifest.outputs.NAME }}.phar" "${{ github.workspace }}/${{ steps.get-manifest.outputs.NAME }}_dev-${{ github.ref_name }}.phar"
    
        - name: Create or update development release
          uses: ncipollo/release-action@v1
          with:
              artifacts: "${{ github.workspace }}/${{ steps.get-manifest.outputs.NAME }}_dev-${{ github.ref_name }}.phar"
              token: ${{ secrets.GITHUB_TOKEN }}
              prerelease: true
              allowUpdates: true
              tag: development-release
              name: "Development Plugin Builds"
              body: |
                This release contains the latest development builds of the plugin for each branch.
                They are automatically updated when new commits are pushed to the branch. 
                
                The plugin phar name follows the format: **{plugin name}_dev-{branch name}.phar**
                
                **DO NOT USE THESE BUILDS ON A PRODUCTION SERVER**
